{
	"version": 3,
	"file": "style.css",
	"sources": [
		"../scss/style.scss",
		"../scss/_grid.scss"
	],
	"sourcesContent": [
		"//@import 'reset'\r\n\r\n@import 'grid'\r\n\r\n\r\n\r\n\r\n",
		"// Variavéis esse tipo de comentário só aparece no scss no css irá sumir\r\n\r\n$colunas: 12;\r\n$gutter: 20px; /* margem da esquerda e direita */\r\n$large-device: 1200px; // tamanho padrão que seria no computador\r\n$medium-device: 760px; // tamanho medio que seria mais em tablets\r\n$small-device: 480px; // tamanho pequeno que seria mais em celulares\r\n\r\n/* Box Sizing */\r\n\r\n*, *::before, *::after { /* será em todos os elementos do html, inclusive os before e after */\r\n    /* não soma os valores por exemplo da borda, padding, margem ao tamanho do total width ou heigth, por exemplo, width: 200px padding:20 será 200px o width, sem o box-sizing: seria 240px; */\r\n    box-sizing: border-box;\r\n    -moz-box-sizing: border-box; /* firefox, versões mais antigas */\r\n    -webkit-box-sizing: border-box; /* chrome e safari versões mais antigas */\r\n}\r\n\r\n// Mixin e media-queries\r\n\r\n@mixin d($size) { // mixin dos media-queries\r\n    // d = device\r\n    // l = large\r\n    // m = medium\r\n    // s == small\r\n   \r\n    @if $size == l {\r\n        @media only screen and (min-width: #{$large-device}) { // necessário colocar a varíavel entre #{}, pois só assim irá pegar o valor correto que é os 1200px\r\n            @content; // conteúdo será adiciondo quando for chamado o mixin e passado o parâmetro e cair nesse if\r\n        }\r\n    }\r\n\r\n    @else if $size == m {\r\n        @media only screen and (min-width: #{$medium-device}) and (max-width: \r\n        #{$large-device} - 1) {\r\n            @content;\r\n        }\r\n    }\r\n    \r\n    @else if $size == s {\r\n        @media only screen and (max-width: #{$medium-device} - 1) { \r\n            @content;\r\n        }\r\n    }\r\n}"
	],
	"names": [],
	"mappings": ";ACGe,kCAAkC;AAKjD,gBAAgB;;AAEhB,AAAA,CAAC,EAAE,CAAC,AAAA,QAAQ,EAAE,CAAC,AAAA,OAAO,CAAC;EAAE,qEAAqE;EAC1F,4LAA4L;EAC5L,UAAU,EAAE,UAAU;EACtB,eAAe,EAAE,UAAU;EAAE,mCAAmC;EAChE,kBAAkB,EAAE,UAAU;EAAE,0CAA0C;CAC7E"
}
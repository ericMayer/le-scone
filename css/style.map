{
	"version": 3,
	"file": "style.css",
	"sources": [
		"../scss/style.scss",
		"../scss/_grid.scss"
	],
	"sourcesContent": [
		"//@import 'reset'\r\n\r\n@import 'grid'\r\n\r\n\r\n\r\n\r\n",
		"// Variavéis esse tipo de comentário só aparece no scss no css irá sumir\r\n\r\n$colunas: 12;\r\n$gutter: 20px; /* margem da esquerda e direita */\r\n$large-device: 1200px; // tamanho padrão que seria no computador\r\n$medium-device: 760px; // tamanho medio que seria mais em tablets\r\n$small-device: 480px; // tamanho pequeno que seria mais em celulares\r\n\r\n/* Box Sizing */\r\n\r\n*, *::before, *::after { /* será em todos os elementos do html, inclusive os before e after */\r\n    /* não soma os valores por exemplo da borda, padding, margem ao tamanho do total width ou heigth, por exemplo, width: 200px padding:20 será 200px o width, sem o box-sizing: seria 240px; */\r\n    box-sizing: border-box;\r\n    -moz-box-sizing: border-box; /* firefox, versões mais antigas */\r\n    -webkit-box-sizing: border-box; /* chrome e safari versões mais antigas */\r\n}\r\n\r\n// Mixin e media-queries\r\n\r\n@mixin d($size) { // mixin dos media-queries\r\n    // d = device\r\n    // l = large\r\n    // m = medium\r\n    // s == small\r\n   \r\n    @if $size == l {\r\n        // seria igual min-width: 1200px\r\n        @media only screen and (min-width: #{$large-device}) { // necessário colocar a varíavel entre #{}, pois só assim irá pegar o valor correto que é os 1200px\r\n            @content; // conteúdo será adiciondo quando for chamado o mixin e passado o parâmetro e cair nesse if\r\n        }\r\n    }\r\n\r\n    @else if $size == m {\r\n        // seria igual min-width: 760px and max-width: 1199\r\n        @media only screen and (min-width: #{$medium-device}) and (max-width: \r\n        #{$large-device} - 1) {\r\n            @content;\r\n        }\r\n    }\r\n    \r\n    @else if $size == s {\r\n        // seria igual max-width: 759px\r\n        @media only screen and (max-width: #{$medium-device} - 1) { \r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n// Função do Grid\r\n\r\n@function grid($coluna, $offset: false) {\r\n    // pega a coluna que foi passada, por exemplo, 5 e divide pelo total de colunas 12 e depois multiplica por 100% para dar a porcentagem que o grid deverá ocupar na tela\r\n    $width: $coluna / $colunas * 100%; // +% não deixa por isso foi deixado 100%\r\n    $resultado: calc(#{$width} - #{$gutter}); // tira o gutter que é margem de 20px do tamanho do grid\r\n\r\n    @if $offset == offset {\r\n        $gutter: $gutter / 2;\r\n        $resultado: calc(#{$width} + #{$gutter}); // com offset será adicionado um espaço a mais na esquerda para criar uma folga entre os itens, por isso é somado com a metade do gutter\r\n    }\r\n    @return $resultado; // returnando o resultado calculado\r\n}\r\n\r\n\r\n// Classes do grid\r\n\r\n@for $i from 1 through $colunas { // fazendo um for que irá começar de 1 e irá até 12\r\n    .grid-#{$i} { // criando os grid-1, grid-2, grid-3\r\n        width: grid($i); // o tamanho dele será gerado automática pela função acima\r\n    }\r\n}\r\n\r\n// Mixin do gutter do grid \r\n\r\n@mixin estrutura-grid {\r\n    display: flex; /* será usado o flexbox ao invés de float */\r\n    flex-wrap: wrap; /* quando não couber irá quebrar linha */\r\n    min-height: 1px; /* colocando min-heigth, pois algumas propriedades precisam ter um mínimo de altura para funcionarem corretamente não quebrarem o layout */\r\n    margin-left: $gutter / 2;\r\n    margin-right: $gutter / 2;\r\n\r\n    @include d(s) { // para celular\r\n        // width: 100%;\r\n        flex-direction: column; /* no mobile só será usado uma única coluna */\r\n        margin-right: 0;\r\n        margin-left: 0;\r\n    }\r\n}\r\n\r\n[class^=\"grid-\"] { /* seletor que seleciona todas as classes do css que começam com grid-, caso colocasse alt selecionaria todas imagens que têm alt */\r\n    @include estrutura-grid(); // chamado o mixin da estrutura do grid\r\n}\r\n\r\n// Classes do offset\r\n\r\n@for $i from 1 through $colunas { // fazendo um for que irá começar de 1 e irá até 12\r\n    .grid-#{$i} { // criando os grid-1, grid-2, grid-3\r\n        margin-left: grid($i, offset); // o tamanho dele será gerado automática pela função acima\r\n    }\r\n}"
	],
	"names": [],
	"mappings": ";ACGe,kCAAkC;AAKjD,gBAAgB;;AAEhB,AAAA,CAAC,EAAE,CAAC,AAAA,QAAQ,EAAE,CAAC,AAAA,OAAO,CAAC;EAAE,qEAAqE;EAC1F,4LAA4L;EAC5L,UAAU,EAAE,UAAU;EACtB,eAAe,EAAE,UAAU;EAAE,mCAAmC;EAChE,kBAAkB,EAAE,UAAU;EAAE,0CAA0C;CAC7E;;;AAmDG,AAAA,OAAO,CAAK;EACR,KAAK,EAdG,qBAA4B;CAevC;;;AAFD,AAAA,OAAO,CAAK;EACR,KAAK,EAdG,sBAA4B;CAevC;;;AAFD,AAAA,OAAO,CAAK;EACR,KAAK,EAdG,gBAA4B;CAevC;;;AAFD,AAAA,OAAO,CAAK;EACR,KAAK,EAdG,sBAA4B;CAevC;;;AAFD,AAAA,OAAO,CAAK;EACR,KAAK,EAdG,sBAA4B;CAevC;;;AAFD,AAAA,OAAO,CAAK;EACR,KAAK,EAdG,gBAA4B;CAevC;;;AAFD,AAAA,OAAO,CAAK;EACR,KAAK,EAdG,sBAA4B;CAevC;;;AAFD,AAAA,OAAO,CAAK;EACR,KAAK,EAdG,sBAA4B;CAevC;;;AAFD,AAAA,OAAO,CAAK;EACR,KAAK,EAdG,gBAA4B;CAevC;;;AAFD,AAAA,QAAQ,CAAI;EACR,KAAK,EAdG,sBAA4B;CAevC;;;AAFD,AAAA,QAAQ,CAAI;EACR,KAAK,EAdG,sBAA4B;CAevC;;;AAFD,AAAA,QAAQ,CAAI;EACR,KAAK,EAdG,iBAA4B;CAevC;;;CAoBL,AAAA,AAAA,KAAC,EAAO,OAAO,AAAd,EAAgB;EAAE,oIAAoI;EAdnJ,OAAO,EAAE,IAAI;EAAE,4CAA4C;EAC3D,SAAS,EAAE,IAAI;EAAE,yCAAyC;EAC1D,UAAU,EAAE,GAAG;EAAE,2IAA2I;EAC5J,WAAW,EAAE,IAAW;EACxB,YAAY,EAAE,IAAW;CAY5B;;AAhDO,MAAM,MAAM,MAAM,MAAM,SAAS,EAAE,KAAK,GAAG,CAAC;;GA8CpD,AAAA,AAAA,KAAC,EAAO,OAAO,AAAd,EAAgB;IANT,cAAc,EAAE,MAAM;IAAE,8CAA8C;IACtE,YAAY,EAAE,CAAC;IACf,WAAW,EAAE,CAAC;GAMrB;;;;AAKG,AAAA,OAAO,CAAK;EACR,WAAW,EAvCC,qBAA4B;CAwC3C;;;AAFD,AAAA,OAAO,CAAK;EACR,WAAW,EAvCC,sBAA4B;CAwC3C;;;AAFD,AAAA,OAAO,CAAK;EACR,WAAW,EAvCC,gBAA4B;CAwC3C;;;AAFD,AAAA,OAAO,CAAK;EACR,WAAW,EAvCC,sBAA4B;CAwC3C;;;AAFD,AAAA,OAAO,CAAK;EACR,WAAW,EAvCC,sBAA4B;CAwC3C;;;AAFD,AAAA,OAAO,CAAK;EACR,WAAW,EAvCC,gBAA4B;CAwC3C;;;AAFD,AAAA,OAAO,CAAK;EACR,WAAW,EAvCC,sBAA4B;CAwC3C;;;AAFD,AAAA,OAAO,CAAK;EACR,WAAW,EAvCC,sBAA4B;CAwC3C;;;AAFD,AAAA,OAAO,CAAK;EACR,WAAW,EAvCC,gBAA4B;CAwC3C;;;AAFD,AAAA,QAAQ,CAAI;EACR,WAAW,EAvCC,sBAA4B;CAwC3C;;;AAFD,AAAA,QAAQ,CAAI;EACR,WAAW,EAvCC,sBAA4B;CAwC3C;;;AAFD,AAAA,QAAQ,CAAI;EACR,WAAW,EAvCC,iBAA4B;CAwC3C"
}
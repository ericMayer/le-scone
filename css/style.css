@charset "UTF-8";
/* Arquivo de reset das propriedades */
h1, h2, h3, body, p, ul, li {
  padding: 0;
  margin: 0;
}

ul {
  list-style: none;
  /* tirando a bolinha padrão que veem do lado da lista */
}

a {
  text-decoration: none;
  /* tirando o sublinhado dos links */
}

h1, h2 {
  font-weight: normal;
}

/* margem da esquerda e direita */
/* Box Sizing */
*, *::before, *::after {
  /* será em todos os elementos do html, inclusive os before e after */
  /* não soma os valores por exemplo da borda, padding, margem ao tamanho do total width ou heigth, por exemplo, width: 200px padding:20 será 200px o width, sem o box-sizing: seria 240px; */
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  /* firefox, versões mais antigas */
  -webkit-box-sizing: border-box;
  /* chrome e safari versões mais antigas */
}

.flex-item-1 {
  flex: 0 0 calc(8.33333% - 20px);
}

.flex-item-2 {
  flex: 0 0 calc(16.66667% - 20px);
}

.flex-item-3 {
  flex: 0 0 calc(25% - 20px);
}

.flex-item-4 {
  flex: 0 0 calc(33.33333% - 20px);
}

.flex-item-5 {
  flex: 0 0 calc(41.66667% - 20px);
}

.flex-item-6 {
  flex: 0 0 calc(50% - 20px);
}

.flex-item-7 {
  flex: 0 0 calc(58.33333% - 20px);
}

.flex-item-8 {
  flex: 0 0 calc(66.66667% - 20px);
}

.flex-item-9 {
  flex: 0 0 calc(75% - 20px);
}

.flex-item-10 {
  flex: 0 0 calc(83.33333% - 20px);
}

.flex-item-11 {
  flex: 0 0 calc(91.66667% - 20px);
}

.flex-item-12 {
  flex: 0 0 calc(100% - 20px);
}

[class^="flex-item-"] {
  /* seletor que seleciona todas as classes do css que começam com flex-item-, caso colocasse alt selecionaria todas imagens que têm alt */
  min-height: 1px;
  /* colocando min-heigth, pois algumas propriedades precisam ter um mínimo de altura para funcionarem corretamente não quebrarem o layout */
  margin-left: 10px;
  margin-right: 10px;
}

@media only screen and (max-width: calc(760px - 1px)) {
  [class^="flex-item-"] {
    margin-right: 0;
    margin-left: 0;
  }
}

/* O Offset irá pegar certinho o espaço entre os elementos que ficar desajustado e irá adicionar mais o gutter para ficar alinhado o conteúdo corretamente */
.offset-1 {
  margin-left: calc(8.33333% + 10px);
}

.offset-2 {
  margin-left: calc(16.66667% + 10px);
}

.offset-3 {
  margin-left: calc(25% + 10px);
}

.offset-4 {
  margin-left: calc(33.33333% + 10px);
}

.offset-5 {
  margin-left: calc(41.66667% + 10px);
}

.offset-6 {
  margin-left: calc(50% + 10px);
}

.offset-7 {
  margin-left: calc(58.33333% + 10px);
}

.offset-8 {
  margin-left: calc(66.66667% + 10px);
}

.offset-9 {
  margin-left: calc(75% + 10px);
}

.offset-10 {
  margin-left: calc(83.33333% + 10px);
}

.offset-11 {
  margin-left: calc(91.66667% + 10px);
}

.offset-12 {
  margin-left: calc(100% + 10px);
}

@media only screen and (max-width: calc(760px - 1px)) {
  .offset-1, .offset-2, .offset-3, .offset-4, .offset-5, .offset-6, .offset-7, .offset-8, .offset-9, .offset-10, .offset-11, .offset-12 {
    margin-left: 0px;
  }
}

/*@mixin clearfix {
    &::after, &::before {
        content: '';
        display: table;
        clear: both;
    }
}*/
.flex-container {
  display: flex;
  /* será usado o flexbox ao invés de float */
  flex-wrap: wrap;
  /* quando não couber irá quebrar linha */
  max-width: 1200px;
  margin: 0 auto;
}

@media only screen and (min-width: 760px) and (max-width: calc(1200px - 1px)) {
  .flex-container {
    max-width: 760px;
  }
}

@media only screen and (max-width: calc(760px - 1px)) {
  .flex-container {
    flex-direction: column;
    max-width: 480px;
    padding-left: 10px;
    padding-right: 10px;
  }
}

/* quando eu tiver flex-item dentro de flex-item será adicionado as margens automaticamente, porém eu não irei querer isso, pois irá desalinhar todo o conteúdo, por isso será subtraído a margem que já foi adicionada */
.flex-row {
  display: flex;
  /* é necessário o display flex, pois quando estiver dentro de um flex-item e for adicionar mais flex-items será necessário tirar a margem adicional que será colocada e também ele precisa pegar o tamanho do pai como padrão é não o do flex-item padrão, por isso é necessário que tenha um display flex, como não é possível adicionar o flex-container, pois quebraria o layout todo, por isso é adcionado o row como display flex */
  flex-wrap: wrap;
  margin-right: -10px;
  margin-left: -10px;
}

@media only screen and (max-width: calc(760px - 1px)) {
  .flex-row {
    margin-right: 0;
    margin-left: 0;
  }
}

body {
  background-color: #edece4;
  border: 10px solid #cbc6b9;
  color: #2a2426;
}

@media only screen and (max-width: calc(760px - 1px)) {
  body {
    /* no mobile não é necessário a borda */
    border: none;
  }
}

img {
  display: block;
  /* passando imagem para display block para não pegar a margem que por padrão é adicionada nas imagens nos navegadores */
  max-width: 100%;
  /* maximo width: 100% para que a imagem possa diminuir automaticamente */
}

p {
  font-family: "PT Mono", monospace;
  font-size: 1.125em;
  line-height: 1.66667em;
}

.titulo {
  font-family: "PT Mono", monospace;
  font-size: 1.125em;
  line-height: 1.66667em;
  text-transform: uppercase;
}

@media only screen and (max-width: calc(760px - 1px)) {
  .titulo {
    /* No responsivo é necessário uma margem para não ficar grudado o conteúdo */
    margin-bottom: 40px;
  }
}

.titulo::after {
  content: '';
  display: block;
  float: right;
  width: 75%;
  height: 2px;
  background: #2a2426;
  margin-top: 13px;
}

@media only screen and (min-width: 760px) and (max-width: calc(1200px - 1px)) {
  .titulo::after {
    width: 60%;
  }
}

.introducao {
  margin: 60px 0;
}

@media only screen and (max-width: calc(760px - 1px)) {
  .introducao {
    margin: 40px 0;
  }
}

.introducao-logo {
  margin-bottom: 60px;
}

@media only screen and (max-width: calc(760px - 1px)) {
  .introducao-logo {
    margin-bottom: 40px;
  }
}

.introducao-info {
  border-right: 2px solid #2a2426;
  max-width: 340px;
}

.introducao-info p {
  padding-top: 10px;
  /* separando o conteúdo */
}

.introducao-info p:first-child {
  /* pega o segundo p */
  border-bottom: 2px solid #2a2426;
  padding-bottom: 10px;
  /* para criar uma separação do conteúdo igual a que têm acima */
}

.introducao-telefone {
  color: #988c77;
}

@media only screen and (max-width: calc(760px - 1px)) {
  .introducao-telefone {
    margin-bottom: 20px;
  }
}

.introducao-telefone::after {
  /* será criado as barras com texto e com o after */
  content: '/ / / /';
  display: block;
  font-size: 220px;
  /* aumentando o tamanho do texto */
  margin-top: 200px;
  letter-spacing: -90px;
  /* diminuindo o espaço entre as letras assim irá caber o conteúdo e não irá quebrar o container */
  color: #2a2426;
}

@media only screen and (min-width: 760px) and (max-width: calc(1200px - 1px)) {
  .introducao-telefone::after {
    /* ajustando valores para o tablet */
    margin-top: 100px;
    font-size: 160px;
    letter-spacing: -70px;
  }
}

@media only screen and (max-width: calc(760px - 1px)) {
  .introducao-telefone::after {
    display: none;
    /* no celular não será exibido nada */
  }
}

.introducao-aberto {
  display: inline-block;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  margin-left: 30px;
  background-color: #1ab912;
}

.introducao-foto {
  border: 10px solid #cbc6b9;
}
